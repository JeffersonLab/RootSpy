//
// File generated by rootcint at Tue Sep 24 18:06:40 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dialog_SelectTree_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dialog_SelectTree_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Dialog_SelectTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Dialog_SelectTree(void *p);
   static void deleteArray_Dialog_SelectTree(void *p);
   static void destruct_Dialog_SelectTree(void *p);
   static void streamer_Dialog_SelectTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Dialog_SelectTree*)
   {
      ::Dialog_SelectTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Dialog_SelectTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Dialog_SelectTree", ::Dialog_SelectTree::Class_Version(), "./Dialog_SelectTree.h", 26,
                  typeid(::Dialog_SelectTree), DefineBehavior(ptr, ptr),
                  &::Dialog_SelectTree::Dictionary, isa_proxy, 0,
                  sizeof(::Dialog_SelectTree) );
      instance.SetDelete(&delete_Dialog_SelectTree);
      instance.SetDeleteArray(&deleteArray_Dialog_SelectTree);
      instance.SetDestructor(&destruct_Dialog_SelectTree);
      instance.SetStreamerFunc(&streamer_Dialog_SelectTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Dialog_SelectTree*)
   {
      return GenerateInitInstanceLocal((::Dialog_SelectTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Dialog_SelectTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Dialog_SelectTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Dialog_SelectTree::Class_Name()
{
   return "Dialog_SelectTree";
}

//______________________________________________________________________________
const char *Dialog_SelectTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Dialog_SelectTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Dialog_SelectTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Dialog_SelectTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Dialog_SelectTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Dialog_SelectTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Dialog_SelectTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Dialog_SelectTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Dialog_SelectTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class Dialog_SelectTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGMainFrame::Streamer(R__b);
      R__b >> sleep_time;
      R__b >> timer;
      R__b >> canvas;
      R__b >> list_tree;
      R__b >> viewByObject;
      R__b >> viewByServer;
      R__b >> cancel;
      R__b >> const_cast<  TGPicture* &>( folder_t );
      R__b >> const_cast<  TGPicture* &>( ofolder_t );
      R__b >> const_cast<  TGPicture* &>( tree_s );
      R__b >> const_cast<  TGPicture* &>( tree_t );
      R__b >> const_cast<  TGPicture* &>( pack_t );
      R__b >> const_cast<  TGPicture* &>( hdisk_t );
      R__b >> const_cast<  TGPicture* &>( checked_t );
      R__b >> const_cast<  TGPicture* &>( unchecked_t );
      {
         map<tree_id_t,TGListTreeItem*> &R__stl =  server_items;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(tree_id_t));
         if (R__tcl1==0) {
            Error("server_items streamer","Missing the TClass object for tree_id_t!");
            return;
         }
         TClass *R__tcl2 = TBuffer::GetClass(typeid(TGListTreeItem));
         if (R__tcl2==0) {
            Error("server_items streamer","Missing the TClass object for TGListTreeItem!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            tree_id_t R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            TGListTreeItem* R__t2;
            if (R__b.GetInfo() && R__b.GetInfo()->GetOldVersion()<=3) {
               R__ASSERT(0);// TGListTreeItem is abstract. We assume that older file could not be produced using this streaming method.
            } else {
               R__t2 = (TGListTreeItem*)R__b.ReadObjectAny(R__tcl2);
            }
            typedef tree_id_t Value_t;
            std::pair<Value_t const, TGListTreeItem* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<tree_id_t,TGListTreeItem*> &R__stl =  tree_items;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(tree_id_t));
         if (R__tcl1==0) {
            Error("tree_items streamer","Missing the TClass object for tree_id_t!");
            return;
         }
         TClass *R__tcl2 = TBuffer::GetClass(typeid(TGListTreeItem));
         if (R__tcl2==0) {
            Error("tree_items streamer","Missing the TClass object for TGListTreeItem!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            tree_id_t R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            TGListTreeItem* R__t2;
            if (R__b.GetInfo() && R__b.GetInfo()->GetOldVersion()<=3) {
               R__ASSERT(0);// TGListTreeItem is abstract. We assume that older file could not be produced using this streaming method.
            } else {
               R__t2 = (TGListTreeItem*)R__b.ReadObjectAny(R__tcl2);
            }
            typedef tree_id_t Value_t;
            std::pair<Value_t const, TGListTreeItem* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b >> last_called;
      R__b >> last_ping_time;
      R__b >> last_hist_time;
      R__b >> requested;
      R__b >> lastsize;
      R__b.CheckByteCount(R__s, R__c, Dialog_SelectTree::IsA());
   } else {
      R__c = R__b.WriteVersion(Dialog_SelectTree::IsA(), kTRUE);
      TGMainFrame::Streamer(R__b);
      R__b << sleep_time;
      R__b << timer;
      R__b << canvas;
      R__b << list_tree;
      R__b << viewByObject;
      R__b << viewByServer;
      R__b << cancel;
      R__b << const_cast<  TGPicture* &>( folder_t );
      R__b << const_cast<  TGPicture* &>( ofolder_t );
      R__b << const_cast<  TGPicture* &>( tree_s );
      R__b << const_cast<  TGPicture* &>( tree_t );
      R__b << const_cast<  TGPicture* &>( pack_t );
      R__b << const_cast<  TGPicture* &>( hdisk_t );
      R__b << const_cast<  TGPicture* &>( checked_t );
      R__b << const_cast<  TGPicture* &>( unchecked_t );
      {
         map<tree_id_t,TGListTreeItem*> &R__stl =  server_items;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(tree_id_t));
         if (R__tcl1==0) {
            Error("server_items streamer","Missing the TClass object for tree_id_t!");
            return;
         }
         TClass *R__tcl2 = TBuffer::GetClass(typeid(TGListTreeItem));
         if (R__tcl2==0) {
            Error("server_itemsstreamer","Missing the TClass object for TGListTreeItem!");
            return;
         }
            map<tree_id_t,TGListTreeItem*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((tree_id_t*)&((*R__k).first ),R__tcl1);
            R__b.WriteObjectAny(((*R__k).second),R__tcl2);
            }
         }
      }
      {
         map<tree_id_t,TGListTreeItem*> &R__stl =  tree_items;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(tree_id_t));
         if (R__tcl1==0) {
            Error("tree_items streamer","Missing the TClass object for tree_id_t!");
            return;
         }
         TClass *R__tcl2 = TBuffer::GetClass(typeid(TGListTreeItem));
         if (R__tcl2==0) {
            Error("tree_itemsstreamer","Missing the TClass object for TGListTreeItem!");
            return;
         }
            map<tree_id_t,TGListTreeItem*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((tree_id_t*)&((*R__k).first ),R__tcl1);
            R__b.WriteObjectAny(((*R__k).second),R__tcl2);
            }
         }
      }
      R__b << last_called;
      R__b << last_ping_time;
      R__b << last_hist_time;
      R__b << requested;
      R__b << lastsize;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Dialog_SelectTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Dialog_SelectTree.
      TClass *R__cl = ::Dialog_SelectTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sleep_time", &sleep_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timer", &timer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*list_tree", &list_tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*viewByObject", &viewByObject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*viewByServer", &viewByServer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cancel", &cancel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*folder_t", &folder_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ofolder_t", &ofolder_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree_s", &tree_s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree_t", &tree_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pack_t", &pack_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdisk_t", &hdisk_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*checked_t", &checked_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unchecked_t", &unchecked_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "server_items", (void*)&server_items);
      R__insp.InspectMember("map<tree_id_t,TGListTreeItem*>", (void*)&server_items, "server_items.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tree_items", (void*)&tree_items);
      R__insp.InspectMember("map<tree_id_t,TGListTreeItem*>", (void*)&tree_items, "tree_items.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last_called", &last_called);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last_ping_time", &last_ping_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last_hist_time", &last_hist_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "requested", &requested);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastsize", &lastsize);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Dialog_SelectTree(void *p) {
      delete ((::Dialog_SelectTree*)p);
   }
   static void deleteArray_Dialog_SelectTree(void *p) {
      delete [] ((::Dialog_SelectTree*)p);
   }
   static void destruct_Dialog_SelectTree(void *p) {
      typedef ::Dialog_SelectTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Dialog_SelectTree(TBuffer &buf, void *obj) {
      ((::Dialog_SelectTree*)obj)->::Dialog_SelectTree::Streamer(buf);
   }
} // end of namespace ROOT for class ::Dialog_SelectTree

namespace ROOT {
   void maplEtree_id_tcOTGListTreeItemmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEtree_id_tcOTGListTreeItemmUgR_Dictionary();
   static void *new_maplEtree_id_tcOTGListTreeItemmUgR(void *p = 0);
   static void *newArray_maplEtree_id_tcOTGListTreeItemmUgR(Long_t size, void *p);
   static void delete_maplEtree_id_tcOTGListTreeItemmUgR(void *p);
   static void deleteArray_maplEtree_id_tcOTGListTreeItemmUgR(void *p);
   static void destruct_maplEtree_id_tcOTGListTreeItemmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<tree_id_t,TGListTreeItem*>*)
   {
      map<tree_id_t,TGListTreeItem*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<tree_id_t,TGListTreeItem*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<tree_id_t,TGListTreeItem*>", -2, "prec_stl/map", 63,
                  typeid(map<tree_id_t,TGListTreeItem*>), DefineBehavior(ptr, ptr),
                  0, &maplEtree_id_tcOTGListTreeItemmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<tree_id_t,TGListTreeItem*>) );
      instance.SetNew(&new_maplEtree_id_tcOTGListTreeItemmUgR);
      instance.SetNewArray(&newArray_maplEtree_id_tcOTGListTreeItemmUgR);
      instance.SetDelete(&delete_maplEtree_id_tcOTGListTreeItemmUgR);
      instance.SetDeleteArray(&deleteArray_maplEtree_id_tcOTGListTreeItemmUgR);
      instance.SetDestructor(&destruct_maplEtree_id_tcOTGListTreeItemmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<tree_id_t,TGListTreeItem*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<tree_id_t,TGListTreeItem*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEtree_id_tcOTGListTreeItemmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<tree_id_t,TGListTreeItem*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEtree_id_tcOTGListTreeItemmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<tree_id_t,TGListTreeItem*> : new map<tree_id_t,TGListTreeItem*>;
   }
   static void *newArray_maplEtree_id_tcOTGListTreeItemmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<tree_id_t,TGListTreeItem*>[nElements] : new map<tree_id_t,TGListTreeItem*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEtree_id_tcOTGListTreeItemmUgR(void *p) {
      delete ((map<tree_id_t,TGListTreeItem*>*)p);
   }
   static void deleteArray_maplEtree_id_tcOTGListTreeItemmUgR(void *p) {
      delete [] ((map<tree_id_t,TGListTreeItem*>*)p);
   }
   static void destruct_maplEtree_id_tcOTGListTreeItemmUgR(void *p) {
      typedef map<tree_id_t,TGListTreeItem*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<tree_id_t,TGListTreeItem*>

/********************************************************
* Dialog_SelectTree_Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDialog_SelectTree_Dict();

extern "C" void G__set_cpp_environmentDialog_SelectTree_Dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Dialog_SelectTree.h");
  G__cpp_reset_tagtableDialog_SelectTree_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevDialog_SelectTree_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Dialog_SelectTree */
static int G__Dialog_SelectTree_Dict_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dialog_SelectTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Dialog_SelectTree(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) Dialog_SelectTree(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dialog_SelectTree*) G__getstructoffset())->DoTimer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dialog_SelectTree*) G__getstructoffset())->DoDoubleClickedEntry((TGListTreeItem*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Dialog_SelectTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dialog_SelectTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Dialog_SelectTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Dialog_SelectTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dialog_SelectTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dialog_SelectTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dialog_SelectTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dialog_SelectTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dialog_SelectTree_Dict_714_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dialog_SelectTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Dialog_SelectTree G__TDialog_SelectTree;
static int G__Dialog_SelectTree_Dict_714_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Dialog_SelectTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Dialog_SelectTree*) (soff+(sizeof(Dialog_SelectTree)*i)))->~G__TDialog_SelectTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Dialog_SelectTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Dialog_SelectTree*) (soff))->~G__TDialog_SelectTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Dialog_SelectTree */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDialog_SelectTree_Dict {
 public:
  G__Sizep2memfuncDialog_SelectTree_Dict(): p(&G__Sizep2memfuncDialog_SelectTree_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDialog_SelectTree_Dict::*p)();
};

size_t G__get_sizep2memfuncDialog_SelectTree_Dict()
{
  G__Sizep2memfuncDialog_SelectTree_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDialog_SelectTree_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree))) {
     Dialog_SelectTree *G__Lderived;
     G__Lderived=(Dialog_SelectTree*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDialog_SelectTree_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tree_info_t>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<tree_info_t> >",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<tree_info_t,allocator<tree_info_t> > >",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,server_info_t>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOserver_info_tcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOserver_info_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,server_info_t,less<string> >",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEstringcOserver_info_tcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOserver_info_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<tree_id_t,TGListTreeItem*>",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<tree_id_t,TGListTreeItem*,less<tree_id_t> >",117,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Dialog_SelectTree */
static void G__setup_memvarDialog_SelectTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree));
   { Dialog_SelectTree *p; p=(Dialog_SelectTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"sleep_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TTimer),-1,-1,4,"timer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGCanvas),-1,-1,4,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGListTree),-1,-1,4,"list_tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGRadioButton),-1,-1,4,"viewByObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGRadioButton),-1,-1,4,"viewByServer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGTextButton),-1,-1,4,"cancel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"folder_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"ofolder_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"tree_s=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"tree_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"pack_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"hdisk_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"checked_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TGPicture),-1,-1,4,"unchecked_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR),G__defined_typename("map<tree_id_t,TGListTreeItem*>"),-1,4,"server_items=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR),G__defined_typename("map<tree_id_t,TGListTreeItem*>"),-1,4,"tree_items=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"last_called=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"last_ping_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"last_hist_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"requested=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"lastsize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDialog_SelectTree_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDialog_SelectTree(void) {
   /* Dialog_SelectTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree));
   G__memfunc_setup("Dialog_SelectTree",1695,G__Dialog_SelectTree_Dict_714_0_1, 105, G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTimer",692,G__Dialog_SelectTree_Dict_714_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDoubleClickedEntry",1999,G__Dialog_SelectTree_Dict_714_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGListTreeItem' - 0 - entry i - 'Int_t' 0 - btn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFullPath",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'string' - 1 - path u 'vector<string,allocator<string> >' 'vector<string>' 1 - dirs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateListTree",1455,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'vector<vector<tree_info_t,allocator<tree_info_t> >,allocator<vector<tree_info_t,allocator<tree_info_t> > > >' 'vector<vector<tree_info_t> >' 1 - tree_ids", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateListTreeServer",2086,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'map<string,server_info_t,less<string>,allocator<pair<const string,server_info_t> > >' 'map<string,server_info_t>' 1 - servinfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateGUI",825,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllTrees",1116,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'vector<vector<tree_info_t,allocator<tree_info_t> >,allocator<vector<tree_info_t,allocator<tree_info_t> > > >' 'vector<vector<tree_info_t> >' 1 - tree_ids", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dialog_SelectTree_Dict_714_0_10, 85, G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Dialog_SelectTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dialog_SelectTree_Dict_714_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dialog_SelectTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dialog_SelectTree_Dict_714_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Dialog_SelectTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dialog_SelectTree_Dict_714_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Dialog_SelectTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Dialog_SelectTree_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dialog_SelectTree_Dict_714_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dialog_SelectTree_Dict_714_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dialog_SelectTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dialog_SelectTree_Dict_714_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dialog_SelectTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dialog_SelectTree_Dict_714_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dialog_SelectTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dialog_SelectTree_Dict_714_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dialog_SelectTree::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Dialog_SelectTree", 1821, G__Dialog_SelectTree_Dict_714_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDialog_SelectTree_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDialog_SelectTree_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDialog_SelectTree_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Dialog_SelectTree_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGRadioButton = { "TGRadioButton" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGListTreeItem = { "TGListTreeItem" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TGListTree = { "TGListTree" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_Dialog_SelectTree = { "Dialog_SelectTree" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR = { "vector<tree_info_t,allocator<tree_info_t> >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tree_info_t,allocator<tree_info_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR = { "vector<vector<tree_info_t,allocator<tree_info_t> >,allocator<vector<tree_info_t,allocator<tree_info_t> > > >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<tree_info_t,allocator<tree_info_t> >,allocator<vector<tree_info_t,allocator<tree_info_t> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_maplEstringcOserver_info_tcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOserver_info_tgRsPgRsPgR = { "map<string,server_info_t,less<string>,allocator<pair<const string,server_info_t> > >" , 99 , -1 };
G__linked_taginfo G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR = { "map<tree_id_t,TGListTreeItem*,less<tree_id_t>,allocator<pair<const tree_id_t,TGListTreeItem*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDialog_SelectTree_Dict() {
  G__Dialog_SelectTree_DictLN_TClass.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TBuffer.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TMemberInspector.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TObject.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_string.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TTimer.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TQObject.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGWindow.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGPicture.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGObject.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGFrame.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGCompositeFrame.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGTextButton.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGMainFrame.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGCanvas.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGRadioButton.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGListTreeItem.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TGListTree.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_Dialog_SelectTree.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_maplEstringcOserver_info_tcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOserver_info_tgRsPgRsPgR.tagnum = -1 ;
  G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDialog_SelectTree_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_string);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TTimer);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGRadioButton);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGListTreeItem);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TGListTree);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_Dialog_SelectTree),sizeof(Dialog_SelectTree),-1,62464,(char*)NULL,G__setup_memvarDialog_SelectTree,G__setup_memfuncDialog_SelectTree);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_vectorlEtree_info_tcOallocatorlEtree_info_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_vectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_reverse_iteratorlEvectorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRcOallocatorlEvectorlEtree_info_tcOallocatorlEtree_info_tgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_maplEstringcOserver_info_tcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOserver_info_tgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Dialog_SelectTree_DictLN_maplEtree_id_tcOTGListTreeItemmUcOlesslEtree_id_tgRcOallocatorlEpairlEconstsPtree_id_tcOTGListTreeItemmUgRsPgRsPgR);
}
extern "C" void G__cpp_setupDialog_SelectTree_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDialog_SelectTree_Dict()");
  G__set_cpp_environmentDialog_SelectTree_Dict();
  G__cpp_setup_tagtableDialog_SelectTree_Dict();

  G__cpp_setup_inheritanceDialog_SelectTree_Dict();

  G__cpp_setup_typetableDialog_SelectTree_Dict();

  G__cpp_setup_memvarDialog_SelectTree_Dict();

  G__cpp_setup_memfuncDialog_SelectTree_Dict();
  G__cpp_setup_globalDialog_SelectTree_Dict();
  G__cpp_setup_funcDialog_SelectTree_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDialog_SelectTree_Dict();
  return;
}
class G__cpp_setup_initDialog_SelectTree_Dict {
  public:
    G__cpp_setup_initDialog_SelectTree_Dict() { G__add_setup_func("Dialog_SelectTree_Dict",(G__incsetup)(&G__cpp_setupDialog_SelectTree_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDialog_SelectTree_Dict() { G__remove_setup_func("Dialog_SelectTree_Dict"); }
};
G__cpp_setup_initDialog_SelectTree_Dict G__cpp_setup_initializerDialog_SelectTree_Dict;

